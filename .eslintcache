[{"E:\\react\\wep market\\admin-app\\src\\index.js":"1","E:\\react\\wep market\\admin-app\\src\\App.js":"2","E:\\react\\wep market\\admin-app\\src\\reportWebVitals.js":"3","E:\\react\\wep market\\admin-app\\src\\components\\layout\\index.js":"4","E:\\react\\wep market\\admin-app\\src\\components\\Header\\index.js":"5","E:\\react\\wep market\\admin-app\\src\\components\\ui\\input\\index.js":"6","E:\\react\\wep market\\admin-app\\src\\containers\\Signup\\index.js":"7","E:\\react\\wep market\\admin-app\\src\\containers\\Home\\index.js":"8","E:\\react\\wep market\\admin-app\\src\\containers\\Signin\\index.js":"9","E:\\react\\wep market\\admin-app\\src\\store\\index.js":"10","E:\\react\\wep market\\admin-app\\src\\reducers\\index.js":"11","E:\\react\\wep market\\admin-app\\src\\actions\\index.js":"12","E:\\react\\wep market\\admin-app\\src\\actions\\auth.actions.js":"13","E:\\react\\wep market\\admin-app\\src\\actions\\constans.js":"14","E:\\react\\wep market\\admin-app\\src\\reducers\\auth.reducers.js":"15","E:\\react\\wep market\\admin-app\\src\\helpers\\axios.js":"16","E:\\react\\wep market\\admin-app\\src\\urlConfig.js":"17","E:\\react\\wep market\\admin-app\\src\\components\\HOC\\privateRoute.js":"18","E:\\react\\wep market\\admin-app\\src\\actions\\user.actions.js":"19","E:\\react\\wep market\\admin-app\\src\\reducers\\user.reducer.js":"20","E:\\react\\wep market\\admin-app\\src\\containers\\products\\index.js":"21","E:\\react\\wep market\\admin-app\\src\\containers\\orders\\index.js":"22","E:\\react\\wep market\\admin-app\\src\\reducers\\category.reducer.js":"23","E:\\react\\wep market\\admin-app\\src\\reducers\\order.reducer.js":"24","E:\\react\\wep market\\admin-app\\src\\reducers\\product.reduser.js":"25","E:\\react\\wep market\\admin-app\\src\\containers\\category\\index.js":"26","E:\\react\\wep market\\admin-app\\src\\actions\\category.action.js":"27","E:\\react\\wep market\\admin-app\\src\\actions\\product.action.js":"28","E:\\react\\wep market\\admin-app\\src\\components\\ui\\input\\modal\\index.js":"29","E:\\react\\wep market\\admin-app\\src\\actions\\initialData.action.js":"30","E:\\react\\wep market\\admin-app\\src\\containers\\NewPage\\index.js":"31","E:\\react\\wep market\\admin-app\\src\\helpers\\linerCategories.js":"32","E:\\react\\wep market\\admin-app\\src\\actions\\page.action.js":"33","E:\\react\\wep market\\admin-app\\src\\reducers\\page.reducer.js":"34","E:\\react\\wep market\\admin-app\\src\\components\\loader\\Loader.js":"35","E:\\react\\wep market\\admin-app\\src\\actions\\order.action.js":"36","E:\\react\\wep market\\admin-app\\src\\components\\ui\\input\\Card\\index.js":"37"},{"size":473,"mtime":1612942054346,"results":"38","hashOfConfig":"39"},{"size":1475,"mtime":1611917729500,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":1471,"mtime":1611414450453,"results":"42","hashOfConfig":"39"},{"size":2835,"mtime":1613209927517,"results":"43","hashOfConfig":"39"},{"size":596,"mtime":1611224798346,"results":"44","hashOfConfig":"39"},{"size":2791,"mtime":1611246470350,"results":"45","hashOfConfig":"39"},{"size":995,"mtime":1613109240927,"results":"46","hashOfConfig":"39"},{"size":1955,"mtime":1611418452964,"results":"47","hashOfConfig":"39"},{"size":306,"mtime":1611296752634,"results":"48","hashOfConfig":"39"},{"size":542,"mtime":1611401505752,"results":"49","hashOfConfig":"39"},{"size":135,"mtime":1610797652248,"results":"50","hashOfConfig":"39"},{"size":1733,"mtime":1610698418153,"results":"51","hashOfConfig":"39"},{"size":2630,"mtime":1612160641503,"results":"52","hashOfConfig":"39"},{"size":1406,"mtime":1610698675043,"results":"53","hashOfConfig":"39"},{"size":811,"mtime":1613221256066,"results":"54","hashOfConfig":"39"},{"size":221,"mtime":1623826858789,"results":"55","hashOfConfig":"39"},{"size":431,"mtime":1610615327919,"results":"56","hashOfConfig":"39"},{"size":724,"mtime":1610626012279,"results":"57","hashOfConfig":"39"},{"size":897,"mtime":1610628054027,"results":"58","hashOfConfig":"39"},{"size":8801,"mtime":1623821824736,"results":"59","hashOfConfig":"39"},{"size":7830,"mtime":1612331889346,"results":"60","hashOfConfig":"39"},{"size":3396,"mtime":1611412010133,"results":"61","hashOfConfig":"39"},{"size":611,"mtime":1612076342085,"results":"62","hashOfConfig":"39"},{"size":437,"mtime":1610797888645,"results":"63","hashOfConfig":"39"},{"size":12488,"mtime":1614152879050,"results":"64","hashOfConfig":"39"},{"size":2643,"mtime":1613116556317,"results":"65","hashOfConfig":"39"},{"size":2029,"mtime":1623817222122,"results":"66","hashOfConfig":"39"},{"size":1127,"mtime":1611246852624,"results":"67","hashOfConfig":"39"},{"size":855,"mtime":1614152836396,"results":"68","hashOfConfig":"39"},{"size":5519,"mtime":1611413064080,"results":"69","hashOfConfig":"39"},{"size":427,"mtime":1611314528590,"results":"70","hashOfConfig":"39"},{"size":749,"mtime":1611382034039,"results":"71","hashOfConfig":"39"},{"size":802,"mtime":1611411205112,"results":"72","hashOfConfig":"39"},{"size":3477,"mtime":1611410475026,"results":"73","hashOfConfig":"39"},{"size":1384,"mtime":1611917627432,"results":"74","hashOfConfig":"39"},{"size":480,"mtime":1611923317305,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1bzi8p7",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"E:\\react\\wep market\\admin-app\\src\\index.js",[],["160","161"],"E:\\react\\wep market\\admin-app\\src\\App.js",["162"],"import { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home/index\";\nimport Signin from \"./containers/Signin/index\";\nimport \"./App.css\";\nimport Signup from \"./containers/Signup/index\";\nimport PrivateRoute from \"./components/HOC/privateRoute\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isUserLoggedIn } from \"./actions\";\nimport Products from './containers/products/index';\nimport Orders from './containers/orders/index';\nimport Category from './containers/category/index';\nimport { getinitialData } from './actions/initialData.action';\nimport NewPage from './containers/NewPage/index';\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if(auth.authenticate){\n      dispatch(getinitialData());\n    }\n   \n  },[auth.authenticate]);\n  \n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute path=\"/page\" component={NewPage} />\n        <PrivateRoute path=\"/products\"  component={Products} />\n        <PrivateRoute path=\"/orders\"  component={Orders} />\n        <PrivateRoute path=\"/category\"  component={Category} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\"  component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\react\\wep market\\admin-app\\src\\reportWebVitals.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\layout\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\Header\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\ui\\input\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\containers\\Signup\\index.js",["163","164"],"import React, { useState } from \"react\";\r\nimport Layout from \"./../../components/layout/index\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Input from \"./../../components/ui/input/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signup } from './../../actions/user.actions';\r\nimport '../Signin/signin.scss'\r\n/**\r\n * @author\r\n * @function Signup\r\n **/\r\n\r\nconst Signup = (props) => {\r\n  const [firstName, setfirstName] = useState(\"\");\r\n  const [lastName, setlastName] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [error,seterror]=useState('')\r\n\r\n  const dispatch=useDispatch()\r\n  const userSignup =(e)=>{\r\n      e.preventDefault();\r\n    const user={\r\n      firstName,lastName,email,password\r\n    }\r\n    dispatch(signup(user))\r\n  }\r\n  const auth = useSelector((state) => state.auth);\r\n  const user= useSelector(state => state.user);\r\n  if (auth.authenticate) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  if(user.loading){\r\n    return <p>Loading....!</p>\r\n  }\r\n  return (\r\n    <Layout>\r\n      <div className=\"container\">\r\n        <div className=\"signin_bc\">\r\n        {user.message}\r\n        <Row style={{ marginTop: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userSignup}>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"first name\"\r\n                    label=\"first name\"\r\n                    value={firstName}\r\n                    onChange={(e) => setfirstName(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"last name\"\r\n                    label=\"last name\"\r\n                    value={lastName}\r\n                    onChange={(e) => setlastName(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                label=\"email\"\r\n                value={email}\r\n                onChange={(e) => setemail(e.target.value)}\r\n              />\r\n\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                label=\"password\"\r\n                value={password}\r\n                onChange={(e) => setpassword(e.target.value)}\r\n              />\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\react\\wep market\\admin-app\\src\\containers\\Home\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\containers\\Signin\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\store\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\reducers\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\auth.actions.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\constans.js",[],"E:\\react\\wep market\\admin-app\\src\\reducers\\auth.reducers.js",[],"E:\\react\\wep market\\admin-app\\src\\helpers\\axios.js",["165"],"import axios from 'axios'\r\nimport { api } from './../urlConfig';\r\nimport store from './../store/index';\r\nimport { autConstants } from '../actions/constans';\r\nconst token= window.localStorage.getItem('token')\r\nconst axioss= axios.create({\r\n   baseURL:api,\r\n   headers:{\r\n     'Authorization':token?`Bearer ${token}`:''\r\n   }\r\n})\r\naxioss.interceptors.request.use((req)=>{\r\n  const {auth} =store.getState()\r\n  if(auth.token){\r\n    req.headers.Authorization=`Bearer ${auth.token}`\r\n  }\r\n  return req\r\n})\r\naxioss.interceptors.response.use((res)=>{\r\n   return  res\r\n},(error)=>{\r\n  console.log(error.response)\r\n  const {status}=error.response\r\n  if(status  == 500 ){\r\n      localStorage.clear()\r\n      store.dispatch({type: autConstants.LOGOUT_SUCCESS})\r\n  }\r\n  return Promise.reject(error)\r\n})\r\nexport default axioss","E:\\react\\wep market\\admin-app\\src\\urlConfig.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\HOC\\privateRoute.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\user.actions.js",[],"E:\\react\\wep market\\admin-app\\src\\reducers\\user.reducer.js",[],"E:\\react\\wep market\\admin-app\\src\\containers\\products\\index.js",["166"],"import React from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"./../../components/ui/input/index\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct,deleteProductById } from \"./../../actions/product.action\";\r\nimport {  TiInfoLarge } from \"react-icons/ti\";\r\nimport { IoArchive } from \"react-icons/io5\";\r\nimport Modall from \"../../components/ui/input/modal\";\r\nimport Gun from './2.mp3'\r\nimport './style.scss'\r\nimport { generatepublicurl } from \"../../urlConfig\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport { Howl, Howler } from 'howler';\r\n/**\r\n * @author\r\n * @function Products\r\n **/\r\n\r\nconst Products = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setname] = useState(\"\");\r\n  const [quantity, setquantity] = useState(\"\");\r\n  const [price, setprice] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [categoryid, setcategoryid] = useState(\"\");\r\n  const [productPictures, setproductPictures] = useState([]);\r\n  const category = useSelector((state) => state.category);\r\n  const [productshow, setproductShow] = useState(false);\r\n  const [productdetail, setproductdetail] = useState(null);\r\n  const product =useSelector(state=>state.product)\r\n  const dispatch = useDispatch();\r\n  const audio={\r\n    sound : Gun\r\n}\r\nconst Soundplay = src =>{\r\n    const sound= new Howl({\r\n        src\r\n    })\r\n    sound.play()\r\n}\r\nHowler.volume(1.0)\r\n\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"category\", categoryid);\r\n    form.append(\"price\", price);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"description\", description);\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPictures\", pic);\r\n    }\r\n    console.log(form);\r\n    dispatch(addProduct(form));\r\n    setShow(false);\r\n  };\r\n  const handleClosee = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  const handleProductPictures = (e) => {\r\n    setproductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n  console.log(categoryid);\r\n  // console.log(productPictures)\r\n  const detaill =(pro)=>{\r\n    Soundplay(audio.sound)\r\n    showproductDetailModal(pro)\r\n  }\r\n \r\n  const renderProducts=()=>{\r\n    return(\r\n      <Table className=\"product-text\" style={{fontSize:15}} >\r\n              <thead>\r\n                <tr className=\"list_header\">\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th className=\"for_nonn\">Price</th>\r\n                  <th className=\"for_nonn\">Quantity</th>\r\n                  <th className=\"for_nonn\">Category</th>\r\n                  <th style={{color:\"white\",fontSize:\"20px\",paddingLeft:\"40px\",textTransform:\"uppercase\"}}>actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  product.products.length>0 ?\r\n                   product.products.map((pro,i) => \r\n                    <tr   key={pro._id}>\r\n                    <td>{i+1}</td>\r\n                    <td >{pro.name}</td>     \r\n                    <td className=\"for_nonn\">{pro.price}</td>\r\n                    <td className=\"for_nonn\">{pro.quantity}</td>\r\n                    <td className=\"for_nonn\">{pro.category.name}</td>\r\n                    <td>\r\n                    <button\r\n                    style={{\r\n                      marginRight:\"10px\",\r\n                      \r\n                    }}\r\n                    className=\"edit_btn\"\r\n                    onClick={()=>detaill(pro)}>\r\n                    < TiInfoLarge style={{color:\"white\"}}/>  info\r\n                    </button>\r\n                    <button\r\n\r\n                      className=\"delete_btn for_nonn\"\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: pro._id,\r\n                        };\r\n                        dispatch(deleteProductById(payload));\r\n                      }}\r\n                    >\r\n                     <IoArchive/> del\r\n                    </button>\r\n                  </td>\r\n                  </tr>   \r\n                   ): <tr><td>you dont have any product</td></tr>\r\n                  }\r\n                 \r\n               \r\n              </tbody>\r\n            </Table>\r\n      \r\n    )\r\n  }\r\n  const renderAddProducts=()=>{\r\n    return (\r\n      <Modall\r\n      handleClose={handleClose}\r\n      handleClosee={handleClosee}\r\n      modalTitle={\"Add New Category\"}\r\n      show={show}\r\n    >\r\n      <Input\r\n        label=\"Name\"\r\n        value={name}\r\n        placeholder={\"pruduct name\"}\r\n        onChange={(e) => setname(e.target.value)}\r\n      />\r\n      <Input\r\n        label=\"Quantity\"\r\n        value={quantity}\r\n        placeholder={\"quantity\"}\r\n        onChange={(e) => setquantity(e.target.value)}\r\n      />\r\n      <Input\r\n        label=\"price\"\r\n        value={price}\r\n        placeholder={\"price\"}\r\n        onChange={(e) => setprice(e.target.value)}\r\n      />\r\n      <Input\r\n        label=\"decsription\"\r\n        value={description}\r\n        placeholder={\"description\"}\r\n        onChange={(e) => setdescription(e.target.value)}\r\n      />\r\n      <select\r\n        value={categoryid}\r\n        className=\"form-control\"\r\n        onChange={(e) => setcategoryid(e.target.value)}\r\n      >\r\n        <option>select category</option>\r\n        {createCategoryList(category.categories).map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {productPictures.length > 0\r\n        ? productPictures.map((pic, i) => <div key={i}>{pic.name}</div>)\r\n        : null}\r\n\r\n      <input\r\n        type=\"file\"\r\n        name=\"productPicture\"\r\n        onChange={handleProductPictures}\r\n      />\r\n    </Modall>\r\n\r\n    )\r\n  }\r\n\r\n  const handleCloseProductDetails=()=>{\r\n    setproductShow(false)\r\n  }\r\n  const showproductDetailModal=(product)=>{\r\n  \r\n    setproductdetail(product)\r\n    setproductShow(true)\r\n  }\r\n  const renderProductDetailModal=()=>{\r\n    if(!productdetail){\r\n      return null\r\n    }\r\n\r\n    return(\r\n      <Modall\r\n      handleClosee={handleCloseProductDetails}\r\n      modalTitle={\"Product details\"}\r\n      show={productshow}\r\n      size='lg'\r\n      btncl={true}\r\n    >\r\n        <Row className=\"detail__text\">\r\n          <Col md='6'>\r\n            <label className='key' >Name</label>\r\n            <p className='value' >{productdetail.name}</p>\r\n          </Col>\r\n          <Col md='6'>\r\n            <label className='key' >Price</label>\r\n            <p className='value' >{productdetail.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"detail__text\">\r\n          <Col md='6'>\r\n            <label className='key' >Quantity</label>\r\n            <p className='value' >{productdetail.quantity}</p>\r\n          </Col>\r\n          <Col md='6'>\r\n            <label className='key' >Category</label>\r\n            <p className='value' >{productdetail.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"detail__text\">\r\n          <Col md='12'>\r\n            <label className='key' >Description</label>\r\n            <p className='value' >{productdetail.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          \r\n          <Col>\r\n          <label>Product Pictures</label>\r\n          <div style={{display:'flex'}}>\r\n          {productdetail.productPictures.map(picture =>\r\n              <div key={picture._id} className=\"productImageContainer\">\r\n                <img className=\"product_detail_img\" src={picture.img} alt={`${picture._id}`}/>\r\n              </div>\r\n              )}\r\n          </div>\r\n            \r\n             </Col>\r\n        </Row>\r\n\r\n    </Modall>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Product</h3>\r\n              <button className=\"add_product\" onClick={handleShow}> <IoIosAdd className=\"add_icon\"/> Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          {renderProducts()}\r\n                </Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProducts()}\r\n      {renderProductDetailModal()}\r\n       </Layout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","E:\\react\\wep market\\admin-app\\src\\containers\\orders\\index.js",["167","168","169","170","171","172","173","174","175","176"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./style.css\";\r\nimport './style.scss'\r\nimport Layout from './../../components/layout/index';\r\nimport Card from './../../components/ui/input/Card/index';\r\nimport { updateOrder } from \"../../actions/order.action\";\r\n\r\n\r\nimport { FcCheckmark } from \"react-icons/fc\";\r\n/**\r\n * @author\r\n * @function Orders\r\n **/\r\n\r\nconst Orders = (props) => {\r\n  const order = useSelector((state) => state.order);\r\n  const [type, setType] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  \r\n  const onOrderUpdate = (orderId) => {\r\n    const payload = {\r\n      orderId,\r\n      type,\r\n    };\r\n    dispatch(updateOrder(payload));\r\n  };\r\n \r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n  console.log(order)\r\n  return (\r\n    <Layout sidebar >\r\n      <div className=\"for_font layoo\">\r\n      {order.orders && order.orders.map((orderItem, index) => (\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}\r\n          key={index}\r\n          headerLeft={`Order-Id:  ${orderItem._id}`}\r\n        >\r\n          <div className=\"orders_wrap\">\r\n          <div\r\n            className=\"order_wraper\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"30px 30px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div className=\"title for_font\">Items</div>\r\n              {orderItem.items.map((item, index) => (\r\n                <div className=\"value\" key={index}>\r\n                  {item.productId.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <span className=\"title for_font\">Total Price</span>\r\n              <br />\r\n              <span className=\"value for_font\">{orderItem.totalAmount}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title for_font\">Payment Type</span> <br />\r\n              <span className=\"value for_font\">{orderItem.paymentType}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title for_font\">Payment Status</span> <br />\r\n              <span className=\"value for_font\">{orderItem.paymentStatus}</span>\r\n            </div>\r\n          </div>\r\n                <div\r\n                  className=\"order_footer_wraper\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    padding: \"30px 30px\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                  <span className=\"title for_font\">Username</span>\r\n                  <br />\r\n                  <span className=\"value for_font\">\r\n                  {\r\n                      order.addres.map(element => \r\n                        element.address.find(elem=>elem._id == orderItem.addressId) &&\r\n                       (\r\n                         <div className=\"he\">\r\n                             {\r\n                             element.address.find(elem=>elem._id == orderItem.addressId).name  && element.address.find(elem=>elem._id == orderItem.addressId).name\r\n                              }\r\n                         </div>\r\n                       ))\r\n                            \r\n\r\n                  }\r\n\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"title for_font\">Addres</span> <br />\r\n                  <span className=\"value for_font\">\r\n\r\n                  {\r\n                      order.addres.map(element => \r\n                        element.address.find(elem=>elem._id == orderItem.addressId) &&\r\n                       (\r\n                         <div className=\"he\">\r\n                             {\r\n                             \r\n                             element.address.find(elem=>elem._id == orderItem.addressId).address &&  element.address.find(elem=>elem._id == orderItem.addressId).address\r\n                              }\r\n                         </div>\r\n                       ))\r\n                            \r\n\r\n                  }\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"title for_font\">Tel:</span> <br />\r\n                  <span className=\"value for_font\">\r\n                  {/* {\r\n                    order.addres.forEach(element => {\r\n                      element.address.find((elem)=>elem._id == orderItem.addressId) &&\r\n                      console.log(\"find\",element.address.find((elem)=>elem._id == orderItem.addressId).name)  \r\n                    })}{\r\n                    console.log(orderItem.addressId)\r\n                  } */}\r\n                  {\r\n                      order.addres.map(element => \r\n                        element.address.find(elem=>elem._id == orderItem.addressId) &&\r\n                       (\r\n                         <div className=\"he\">\r\n                             {\r\n                            element.address.find(elem=>elem._id == orderItem.addressId).mobileNumber &&  element.address.find(elem=>elem._id == orderItem.addressId).mobileNumber\r\n                              }\r\n                         </div>\r\n                       ))\r\n                            \r\n\r\n                  }\r\n                    </span>\r\n                </div>\r\n                  \r\n                \r\n              </div>\r\n\r\n          <div\r\n            className=\"bottom_wraper_order\"\r\n            style={{\r\n              boxSizing: \"border-box\",\r\n              padding: \"30px 40px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"orderTrack\">\r\n              {orderItem.orderStatus.map((status) => (\r\n                <div\r\n                  className={`orderStatus ${\r\n                    status.isCompleted ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\r\n                  ></div>\r\n                  <div className=\"orderInfo\">\r\n                    <div className=\"status\">{status.type}</div>\r\n                    <div className=\"date\">{formatDate(status.date)}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n           \r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <select className=\"select_order\" onChange={(e) => setType(e.target.value)}>\r\n                <option value={\"\"}>select status</option>\r\n                {orderItem.orderStatus.map((status) => {\r\n                  return (\r\n                    <>\r\n                      {!status.isCompleted ? (\r\n                        <option className=\"select_option_order\" key={status.type} value={status.type}>\r\n                          {status.type}\r\n                        </option>\r\n                      ) : null}\r\n                    </>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            \r\n\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <button className=\"confirm_btn_order\" onClick={() => onOrderUpdate(orderItem._id)}>\r\n               confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          \r\n        </Card>\r\n      ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","E:\\react\\wep market\\admin-app\\src\\reducers\\category.reducer.js",["177","178"],"import { categoryConstans } from \"../actions/constans\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n  let newcategories = [];\r\n  if (parentId == undefined) {\r\n    return [\r\n      ...categories,\r\n      {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        type:category.type,\r\n        children: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  for (let cat of categories) {\r\n    if (cat._id == parentId) {\r\n      const newCategory = {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        type:category.type,\r\n        parentId: category.parentId,\r\n        children: [],\r\n      };\r\n      newcategories.push({\r\n        ...cat,\r\n        children:\r\n          cat.children.length > 0\r\n            ? [...cat.children, newCategory]\r\n            : [newCategory],\r\n      });\r\n    } else {\r\n      newcategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategories(parentId, cat.children, category)\r\n          : [],\r\n      });\r\n    }\r\n  }\r\n  return newcategories;\r\n};\r\nconst categoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstans.GETT_ALL_CATEGORIES_REQUEST:\r\n      return (state = {\r\n        ...state,\r\n        loading:true\r\n      });\r\n    case categoryConstans.GETT_ALL_CATEGORIES_SUCCES:\r\n      return (state = {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n        loading:false\r\n      });\r\n      case categoryConstans.GETT_ALL_CATEGORIES_FAILURE:\r\n      return (state = {\r\n        ...state,\r\n        loading:false,\r\n        error:action.payload.error\r\n      });\r\n    case categoryConstans.ADD_NEW_CATEGORY_REQUEST:\r\n      return (state = {\r\n        ...state,\r\n        loading: true,\r\n      });\r\n    case categoryConstans.ADD_NEW_CATEGORY_SUCCES:\r\n      const category = action.payload.category;\r\n      const updatedcategories = buildNewCategories(\r\n        category.parentId,\r\n        state.categories,\r\n        category\r\n      );\r\n      console.log(updatedcategories);\r\n      return (state = {\r\n        ...state,\r\n        categories: updatedcategories,\r\n        loading: false,\r\n      });\r\n    case categoryConstans.ADD_NEW_CATEGORY_FAILURE:\r\n      return (state = {\r\n        ...initialState,\r\n        error:action.payload.error\r\n      });\r\n    case categoryConstans.UPDATE_CATEGORIES_SUCCES:\r\n      return (state = {\r\n            ...state,\r\n            loading:false\r\n      });\r\n    case categoryConstans.UPDATE_CATEGORIES_REQUEST:\r\n      return (state = {\r\n        ...state,\r\n        loading:true\r\n      });\r\n    case categoryConstans.UPDATE_CATEGORIES_FAILURE:\r\n      return (state = {\r\n          ...state,\r\n          loading:false,\r\n          error:action.payload.error\r\n\r\n      });\r\n      case categoryConstans.DELETE_CATEGORIES_SUCCES:\r\n      return (state = {\r\n            ...state,\r\n            loading:false\r\n      });\r\n    case categoryConstans.DELETE_CATEGORIES_REQUEST:\r\n      return (state = {\r\n        ...state,\r\n        loading:true\r\n      });\r\n    case categoryConstans.DELETE_CATEGORIES_FAILURE:\r\n      return (state = {\r\n          ...state,\r\n          error:action.payload.error,\r\n          loading:false\r\n\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default categoryReducer;\r\n","E:\\react\\wep market\\admin-app\\src\\reducers\\order.reducer.js",[],"E:\\react\\wep market\\admin-app\\src\\reducers\\product.reduser.js",[],"E:\\react\\wep market\\admin-app\\src\\containers\\category\\index.js",["179","180","181","182","183"],"import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCategory } from \"./../../actions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport Input from \"../../components/ui/input\";\r\nimport Modall from \"./../../components/ui/input/modal/index\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport './category.scss'\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n  IoIosTrash,\r\n  IoIosSettings,\r\n  IoIosAdd,\r\n  \r\n} from \"react-icons/io\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport { updateCategories,deleteCategories as deleteCategoriesaction } from './../../actions/category.action';\r\n\r\n/**\r\n * @author\r\n * @function Category\r\n **/\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [parentCategoryid, setParentCategoryid] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [expanded, setExpendet] = useState([]);\r\n  const [checktArray, setChecktArray] = useState([]);\r\n  const [expandetArray, setExpandetArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [checked, setChecket] = useState([]);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryid);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryid(\"\");\r\n\r\n    setShow(false);\r\n  };\r\n  const handleClosee = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categoryes) => {\r\n    let categories = [];\r\n    for (let category of categoryes) {\r\n      categories.push({\r\n        className:\"hi\",\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return categories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type:category.type\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  const hendlCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    updateChektendExpandedCategories()\r\n    setUpdateCategoryModal(true);\r\n    };\r\n\r\n    const updateChektendExpandedCategories = ()=>{\r\n      const categories = createCategoryList(category.categories);\r\n      const chektArry = [];\r\n      const expandetArry = [];\r\n      checked.length > 0 &&\r\n        checked.forEach((categoryId, index) => {\r\n          const category = categories.find(\r\n            (category, i) => categoryId == category.value\r\n          );\r\n          category && chektArry.push(category);\r\n        });\r\n      expanded.length > 0 &&\r\n        expanded.forEach((categoryId, index) => {\r\n          const category = categories.find(\r\n            (category, i) => categoryId == category.value\r\n          );\r\n          category && expandetArry.push(category);\r\n        });\r\n        setChecktArray(chektArry)\r\n        setExpandetArray(expandetArry)\r\n     \r\n    }\r\n\r\n  const handleCategoryInput=(key,value,index,type)=>{\r\n    if(type == \"checked\"){\r\n      const updatedchektArray= checktArray.map((item,_index)=> index == _index ? {...item,[key]:value} : item)\r\n        setChecktArray(updatedchektArray)\r\n    }else if(type===\"expanded\"){\r\n      const updatedexpandetArray= expandetArray.map((item,_index)=> index == _index ? {...item,[key]:value} : item)\r\n      setExpandetArray(updatedexpandetArray)\r\n    }\r\n  }\r\n  const updateCategoriesForm = () =>{\r\n      const form = new FormData()\r\n\r\n      expandetArray.forEach((item,index)=>{\r\n          form.append('_id',item.value)\r\n          form.append('name',item.name)\r\n          form.append('parentId',item.parentId ? item.parentId : \"\")\r\n          form.append('type',item.type)\r\n        })\r\n      checktArray.forEach((item,index)=>{\r\n        form.append('_id',item.value)\r\n        form.append('name',item.name)\r\n        form.append('parentId',item.parentId ? item.parentId : \"\")\r\n        form.append('type',item.type)\r\n      })\r\n    dispatch(updateCategories(form))\r\n   \r\n    setUpdateCategoryModal(false)\r\n  }\r\n  \r\n\r\n  const renderUpdatetCategoriesModal = ()=>{\r\n    console.log({expandetArray,checktArray})\r\n    return (\r\n      <Modall\r\n      show={updateCategoryModal}\r\n      modalTitle={\"Update Categories\"}\r\n      handleClose={updateCategoriesForm}\r\n      handleClosee={() => setUpdateCategoryModal(false)}\r\n      size=\"lg\"\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <h6>Expanded</h6>\r\n        </Col>\r\n      </Row>\r\n      {expandetArray.length > 0 &&\r\n        expandetArray.map((item, index) => (\r\n          <Row key={index}>\r\n            <Col>\r\n              <Input\r\n                value={item.name}\r\n                placeholder={\"Category name\"}\r\n                onChange={(e)=>handleCategoryInput('name',e.target.value,index,\"expanded\")}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <select\r\n                value={item.parentId}\r\n                className=\"form-control select_order\"\r\n                onChange={(e)=>handleCategoryInput('parentId',e.target.value,index,\"expanded\")}\r\n              >\r\n                <option>select category</option>\r\n                {createCategoryList(category.categories).map((option) => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n            <Col>\r\n              <select \r\n              className=\"form-control select_order\"\r\n              value={item.type}\r\n              onChange={(e)=>handleCategoryInput('type',e.target.value,index,\"expanded\")}\r\n              >\r\n                <option value=\"\"> Select Type</option>\r\n                <option value=\"store\"> Store</option>\r\n                <option value=\"product\"> Product</option>\r\n                <option value=\"page\"> Page</option>\r\n              </select>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        <h6>Checkt Categoriess</h6>\r\n          {checktArray.length > 0 &&\r\n            checktArray.map((item, index) => (\r\n          <Row key={index}>\r\n            <Col>\r\n              <Input\r\n                value={item.name}\r\n                placeholder={\"Category name\"}\r\n                onChange={(e)=>handleCategoryInput('name',e.target.value,index,\"checked\")}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <select\r\n                value={item.parentId}\r\n                className=\"form-control select_order\"\r\n                onChange={(e)=>handleCategoryInput('parentId',e.target.value,index,\"checked\")}\r\n              >\r\n                <option>select category</option>\r\n                {createCategoryList(category.categories).map((option) => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n            <Col>\r\n              <select\r\n              className=\"form-control select_order\"\r\n              onChange={(e)=>handleCategoryInput('type',e.target.value,index,\"checked\")}\r\n               value={item.type}\r\n               >\r\n                <option value=\"\"> Select Type</option>\r\n                <option value=\"store\"> Store</option>\r\n                <option value=\"product\"> Product</option>\r\n                <option value=\"page\"> Page</option>\r\n              </select>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      {/* <input type=\"file\" name=\"categoryImage\" onChange={hendlCategoryImage} /> */}\r\n    </Modall>\r\n\r\n    )\r\n  }\r\n  const renderAddcategory = ()=>{\r\n    return(\r\n      <Modall\r\n        show={show}\r\n        modalTitle={\"Add new category\"}\r\n        handleClose={handleClose}\r\n        handleClosee={handleClosee}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={\"Category name\"}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n        <select\r\n          value={parentCategoryid}\r\n          className=\"form-control select_order\"\r\n          onChange={(e) => setParentCategoryid(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input type=\"file\" name=\"categoryImage\" onChange={hendlCategoryImage} />\r\n      </Modall>\r\n     \r\n    )\r\n  }\r\n  const deleteCategory =() =>{\r\n    updateChektendExpandedCategories()\r\n        setDeleteCategoryModal(true)\r\n  }\r\n  const deleteCategories =()=>{\r\n     const chektIdsarray=  checktArray.map((item,index)=>({_id:item.value}))\r\n    //  const expandedidsArray=  expandetArray.map((item,index)=>({_id:item.value}))\r\n    //  const idsArray =expandedidsArray.concat(chektIdsarray)\r\n        if(chektIdsarray.length > 0){\r\n          dispatch(deleteCategoriesaction(chektIdsarray))\r\n          .then(res =>{\r\n            if(res){\r\n          \r\n             setDeleteCategoryModal(false)\r\n            }\r\n          })\r\n        }\r\n        setDeleteCategoryModal(false)\r\n  }\r\n  const renderDeleteCategoryModal = () =>{\r\n    return (\r\n      <Modall\r\n      show={deleteCategoryModal}\r\n      modalTitle={\"Conform\"}\r\n      handleClosee={() => setDeleteCategoryModal(false)}\r\n      buttons={[\r\n        {\r\n          label:'no',\r\n          color:'primary',\r\n          onClick: () =>{\r\n            alert('no')\r\n          }\r\n        },\r\n        {\r\n          label:'Yes',\r\n          color:'danger',\r\n          onClick: deleteCategories\r\n        }\r\n      ]}\r\n      >\r\n        <h5>Expanded</h5>\r\n        {expandetArray.map((item,index)=> <span className=\"delete_text\" key={index}>{item.name}</span> )}\r\n        <h5>Checked</h5>\r\n        {checktArray.map((item,index)=> <span className=\"delete_text\" key={index}>{item.name}</span> )}\r\n      </Modall>\r\n    )\r\n}\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button className=\"add_cat\" onClick={handleShow}> <IoIosAdd className=\"add_icon\"/> Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"btn-wraper btn-wraper_cat\">\r\n          <div className=\"actions\">actions :</div>\r\n            <button className=\"delete_btn\" onClick={deleteCategory} > <IoIosTrash className=\"delete_trash\"/> Delete</button>\r\n            <button className=\"edit_btn\" onClick={updateCategory}> <IoIosSettings className='edit_icon' /> Edit</button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"chek\">\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree \r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecket(checked)}\r\n              onExpand={(expanded) => setExpendet(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n       \r\n      </Container>\r\n     \r\n       {renderDeleteCategoryModal()}\r\n       {renderAddcategory()}\r\n      {\r\n        renderUpdatetCategoriesModal()\r\n      }\r\n      </Layout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","E:\\react\\wep market\\admin-app\\src\\actions\\category.action.js",["184"],"import axioss from './../helpers/axios';\r\nimport { categoryConstans } from './constans';\r\nconst getAllCategory=()=>{\r\n    return async dispatch =>{\r\n        dispatch({type:categoryConstans.GETT_ALL_CATEGORIES_REQUEST})\r\n        const res= await axioss.get('category/getcategory')\r\n          \r\n            if(res.status===200){\r\n                const {categoriList}=res.data\r\n                dispatch({\r\n                    type: categoryConstans.GETT_ALL_CATEGORIES_SUCCES,\r\n                    payload:{categories:categoriList}\r\n                })\r\n            }else{\r\n                dispatch({\r\n                    type:categoryConstans.GETT_ALL_CATEGORIES_FAILURE,\r\n                    payload:{error:res.data.error}\r\n                })\r\n            }\r\n    }\r\n}\r\nexport const addCategory=(form)=>{\r\n   \r\n    return async dispatch =>{\r\n        dispatch({type:categoryConstans.ADD_NEW_CATEGORY_REQUEST})\r\n        try {\r\n            const res = await axioss.post('category/create',form)\r\n        if(res.status===201){\r\n            dispatch({type:categoryConstans.ADD_NEW_CATEGORY_SUCCES,\r\n                payload:{category:res.data.category}\r\n            })\r\n            \r\n        }else{\r\n            dispatch({type:categoryConstans.ADD_NEW_CATEGORY_FAILURE,\r\n                payload:res.data.error\r\n            })\r\n\r\n        }\r\n        } catch (error) {\r\n            \r\n        }\r\n       \r\n    }\r\n}\r\nexport const updateCategories=(form)=>{\r\n    return async dispatch =>{\r\n        dispatch({type: categoryConstans.UPDATE_CATEGORIES_REQUEST})\r\n        const res = await axioss.post('category/update',form)\r\n        if(res.status===201){\r\n            dispatch({type:categoryConstans.UPDATE_CATEGORIES_SUCCES})\r\n            dispatch(getAllCategory())      \r\n        }else{\r\n            const {error}=res.data\r\n            dispatch({\r\n                type:categoryConstans.ADD_NEW_CATEGORY_FAILURE,\r\n                payload:{error}\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\nexport const deleteCategories=(ids)=>{\r\n    return async dispatch =>{\r\n        dispatch({type:categoryConstans.DELETE_CATEGORIES_REQUEST})\r\n        const res = await axioss.post('category/delete',{\r\n            payload:{\r\n                ids\r\n            }\r\n        })\r\n        if(res.status == 200){\r\n            dispatch(getAllCategory())\r\n            dispatch({type:categoryConstans.DELETE_CATEGORIES_SUCCES})\r\n        }else{\r\n            const {error}=res.data\r\n            dispatch({\r\n                type:categoryConstans.DELETE_CATEGORIES_FAILURE,\r\n                payload:{error}\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\nexport {\r\n    getAllCategory\r\n}","E:\\react\\wep market\\admin-app\\src\\actions\\product.action.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\ui\\input\\modal\\index.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\initialData.action.js",[],"E:\\react\\wep market\\admin-app\\src\\containers\\NewPage\\index.js",["185"],"import React from \"react\";\r\nimport Layout from \"../../components/layout\";\r\nimport Modall from \"../../components/ui/input/modal\";\r\nimport { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Input from \"../../components/ui/input\";\r\nimport { useEffect } from \"react\";\r\nimport linerCategories from \"./../../helpers/linerCategories\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Gun from \"./1.mp3\";\r\nimport { createPage } from \"./../../actions/page.action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Howl, Howler } from \"howler\";\r\nimport \"./page.scss\";\r\nimport Loader from \"./../../components/loader/Loader\";\r\n\r\n/**\r\n * @author\r\n * @function NewPage\r\n **/\r\n\r\nconst NewPage = (props) => {\r\n  const [createModal, setCreateModal] = useState(false);\r\n  const [title, settitle] = useState(\"\");\r\n  const [categories, setcategories] = useState([]);\r\n  const [categoryId, setcategoryId] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [banners, setbanners] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const page = useSelector((state) => state.page);\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setcategories(linerCategories(category.categories));\r\n  }, [category]);\r\n  useEffect(() => {\r\n    if (page.loading) {\r\n      return <div>loading........</div>;\r\n    }\r\n  }, [page]);\r\n  const audio = {\r\n    sound: Gun,\r\n  };\r\n  const Soundplay = (src) => {\r\n    const sound = new Howl({\r\n      src,\r\n    });\r\n    sound.play();\r\n  };\r\n  Howler.volume(0.4);\r\n  const handlebannersImages = (e) => {\r\n    console.log(e);\r\n    setbanners([...banners, e.target.files[0]]);\r\n  };\r\n  const handleProductImages = (e) => {\r\n    console.log(e.target.value);\r\n    setProducts([...products, e.target.files[0]]);\r\n  };\r\n  const submitPageForm = (e) => {\r\n    e.preventDefault();\r\n    if (title === \"\") {\r\n      setCreateModal(false);\r\n      alert(\"Title is reqired\");\r\n\r\n      return;\r\n    }\r\n    const form = new FormData();\r\n    form.append(\"title\", title);\r\n    form.append(\"description\", desc);\r\n    form.append(\"category\", categoryId);\r\n    form.append(\"type\", type);\r\n    banners.forEach((banner, index) => {\r\n      form.append(\"banners\", banner);\r\n    });\r\n    products.forEach((product, index) => {\r\n      form.append(\"products\", product);\r\n    });\r\n    dispatch(createPage(form));\r\n    setCreateModal(false);\r\n  };\r\n  const onCategorychenge = (e) => {\r\n    const category = categories.find(\r\n      (categor) => categor._id == e.target.value\r\n    );\r\n    setcategoryId(e.target.value);\r\n    setType(category.type);\r\n  };\r\n  const renderCreatePageModal = () => {\r\n    return (\r\n      <Modall\r\n        show={createModal}\r\n        modalTitle={\"Create New Page\"}\r\n        handleClose={submitPageForm}\r\n        handleClosee={() => setCreateModal(false)}\r\n        size=\"lg\"\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <select\r\n                className=\"form-control form-control-sm\"\r\n                value={categoryId}\r\n                onChange={onCategorychenge}\r\n              >\r\n                <option value=\"\">select category</option>\r\n                {categories.map((cat) => (\r\n                  <option key={cat._id} value={cat._id}>\r\n                    {cat.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                value={title}\r\n                onChange={(e) => settitle(e.target.value)}\r\n                placeholder={\"Page Title\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                placeholder={\"Page Description\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {banners.length > 0\r\n            ? banners.map((banner, index) => (\r\n                <Row key={index}>\r\n                  <Col>{banner.name}</Col>\r\n                </Row>\r\n              ))\r\n            : null}\r\n          <Row>\r\n            <Col>\r\n              <input\r\n                className=\"form-control \"\r\n                type=\"file\"\r\n                name=\"banners\"\r\n                onChange={handlebannersImages}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {products.length > 0\r\n            ? products.map((product, index) => (\r\n                <Row key={index}>\r\n                  <Col>{product.name}</Col>\r\n                </Row>\r\n              ))\r\n            : null}\r\n          <Row>\r\n            <Col>\r\n              <input\r\n                className=\"form-control \"\r\n                type=\"file\"\r\n                name=\"products\"\r\n                onChange={handleProductImages}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modall>\r\n    );\r\n  };\r\n  const modalcoll = () => {\r\n    Soundplay(audio.sound);\r\n    setCreateModal(true);\r\n  };\r\n  if (page.loading) {\r\n    return (\r\n      <div>\r\n        <Layout sidebar>\r\n          <Loader />\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <button className=\"create_page_btn\" onClick={modalcoll}>\r\n        {\" \"}\r\n        Create Page\r\n      </button>\r\n      {renderCreatePageModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewPage;\r\n","E:\\react\\wep market\\admin-app\\src\\helpers\\linerCategories.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\page.action.js",[],"E:\\react\\wep market\\admin-app\\src\\reducers\\page.reducer.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\loader\\Loader.js",[],"E:\\react\\wep market\\admin-app\\src\\actions\\order.action.js",[],"E:\\react\\wep market\\admin-app\\src\\components\\ui\\input\\Card\\index.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":26,"column":5,"nodeType":"192","endLine":26,"endColumn":24,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":19,"column":10,"nodeType":"196","messageId":"197","endLine":19,"endColumn":15},{"ruleId":"194","severity":1,"message":"198","line":19,"column":16,"nodeType":"196","messageId":"197","endLine":19,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":24,"column":14,"nodeType":"201","messageId":"202","endLine":24,"endColumn":16},{"ruleId":"194","severity":1,"message":"203","line":13,"column":10,"nodeType":"196","messageId":"197","endLine":13,"endColumn":27},{"ruleId":"194","severity":1,"message":"204","line":11,"column":10,"nodeType":"196","messageId":"197","endLine":11,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":97,"column":61,"nodeType":"201","messageId":"202","endLine":97,"endColumn":63},{"ruleId":"199","severity":1,"message":"200","line":101,"column":66,"nodeType":"201","messageId":"202","endLine":101,"endColumn":68},{"ruleId":"199","severity":1,"message":"200","line":101,"column":135,"nodeType":"201","messageId":"202","endLine":101,"endColumn":137},{"ruleId":"199","severity":1,"message":"200","line":117,"column":61,"nodeType":"201","messageId":"202","endLine":117,"endColumn":63},{"ruleId":"199","severity":1,"message":"200","line":122,"column":66,"nodeType":"201","messageId":"202","endLine":122,"endColumn":68},{"ruleId":"199","severity":1,"message":"200","line":122,"column":138,"nodeType":"201","messageId":"202","endLine":122,"endColumn":140},{"ruleId":"199","severity":1,"message":"200","line":143,"column":61,"nodeType":"201","messageId":"202","endLine":143,"endColumn":63},{"ruleId":"199","severity":1,"message":"200","line":147,"column":65,"nodeType":"201","messageId":"202","endLine":147,"endColumn":67},{"ruleId":"199","severity":1,"message":"200","line":147,"column":142,"nodeType":"201","messageId":"202","endLine":147,"endColumn":144},{"ruleId":"199","severity":1,"message":"200","line":10,"column":16,"nodeType":"201","messageId":"202","endLine":10,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":24,"column":17,"nodeType":"201","messageId":"202","endLine":24,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":99,"column":41,"nodeType":"201","messageId":"202","endLine":99,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":106,"column":41,"nodeType":"201","messageId":"202","endLine":106,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":116,"column":13,"nodeType":"201","messageId":"202","endLine":116,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":117,"column":70,"nodeType":"201","messageId":"202","endLine":117,"endColumn":72},{"ruleId":"199","severity":1,"message":"200","line":120,"column":75,"nodeType":"201","messageId":"202","endLine":120,"endColumn":77},{"ruleId":"199","severity":1,"message":"200","line":70,"column":23,"nodeType":"201","messageId":"202","endLine":70,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":84,"column":32,"nodeType":"201","messageId":"202","endLine":84,"endColumn":34},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["207"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'seterror' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'generatepublicurl' is defined but never used.","'FcCheckmark' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"210","text":"211"},[935,954],"[auth.authenticate, dispatch]"]